#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
# Jaxchan github:jaxchan25
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	andq %rdx,%rdx		# len <= 0?
	jle Done		# 如果一开始输入的len就<=0，直接结束
	jmp test

Loop8x8:
	#取地址
	mrmovq 0(%rdi), %r8
	mrmovq 8(%rdi), %r9
	mrmovq 16(%rdi), %r10
	mrmovq 24(%rdi), %r11
	mrmovq 32(%rdi), %r12
	mrmovq 40(%rdi), %r13
	mrmovq 48(%rdi), %r14
	mrmovq 56(%rdi), %rbx

	#赋值
	rmmovq %r8, 0(%rsi)
	rmmovq %r9, 8(%rsi)
	rmmovq %r10, 16(%rsi)
	rmmovq %r11, 24(%rsi)
	rmmovq %r12, 32(%rsi)
	rmmovq %r13, 40(%rsi)
	rmmovq %r14, 48(%rsi)
	rmmovq %rbx, 56(%rsi)

#判断是否可以count+1
judge0:
	andq %r8, %r8
	jle judge1
	iaddq $1, %rax
judge1:
	andq %r9, %r9
	jle judge2
	iaddq $1, %rax
judge2:
	andq %r10, %r10
	jle judge3
	iaddq $1, %rax
judge3:
	andq %r11, %r11
	jle judge4
	iaddq $1, %rax
judge4:
	andq %r12, %r12
	jle judge5
	iaddq $1, %rax
judge5:
	andq %r13, %r13
	jle judge6
	iaddq $1, %rax
judge6:
	andq %r14, %r14
	jle judge7
	iaddq $1, %rax
judge7:
	andq %rbx, %rbx
	jle step8x8
	iaddq $1, %rax

step8x8:
	iaddq $64,%rdi
	iaddq $64,%rsi
test:
	#这里需要判断长度是否有8
	iaddq $-8, %rdx
	jg Loop8x8 #长度没有8,有则8x8循环拓展。否则1x1慢慢迭代
	iaddq $8, %rdx #要把减去的8加回去才能循环

Loop1x1:
	mrmovq (%rdi), %r10	# read val from src
	rmmovq %r10, (%rsi)	# and store it to dst
	andq %r10, %r10		# val <= 0? 这里已经是guarded-do了
	jle Npos1x1		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos1x1:	
	iaddq $8, %rdi		# src++
	iaddq $8, %rsi		# dst++
	iaddq $-1, %rdx		# len--
	jg Loop1x1			# if so, goto Loop:

##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
