                            | # Execution begins at address 0 
0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer
0x00a: 804800000000000000   | 	call main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 	
                            | # 内存区域，存放数据/链表之类
                            | # Sample linked list
0x018:                      | .align 8
0x018:                      | ele1:
0x018: 0a00000000000000     |     .quad 0x00a
0x020: 2800000000000000     |     .quad ele2
0x028:                      | ele2:
0x028: b000000000000000     |     .quad 0x0b0
0x030: 3800000000000000     |     .quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     |     .quad 0xc00
0x040: 0000000000000000     |     .quad 0
                            | # END
                            | 
0x048:                      | main:	
0x048: 30f71800000000000000 | 	irmovq ele1,%rdi  #参数准备
0x052: 805c00000000000000   | 	call rsum_list		# rsum_list(ele1)
0x05b: 90                   | 	ret
                            | 
                            | # long rsum_list(long i)
                            | # ele1 in %rdi
0x05c:                      | rsum_list:	
0x05c: a03f                 |     pushq %rbx          #自递归，需要保存目前的结果。其实rbx就是存了 上一个node.val
0x05e: 6300                 | 	xorq %rax,%rax           #return val=0
0x060: 6277                 |     andq %rdi, %rdi
0x062: 738a00000000000000   |     je finish
0x06b: 50370000000000000000 |     mrmovq (%rdi), %rbx  #当前的node.val
0x075: 50770800000000000000 |     mrmovq 8(%rdi), %rdi #node = node->next
0x07f: 805c00000000000000   |     call rsum_list
0x088: 6030                 |     addq %rbx, %rax #在这里仍然会继续往下执行。
                            | 
0x08a:                      | finish:
0x08a: b03f                 |     popq %rbx            #
0x08c: 90                   | 	ret                  # Return
                            | 
                            | # Stack starts here and grows to lower addresses.
                            | # 这里自定义栈开始地址
0x200:                      | 	.pos 0x200
0x200:                      | stack:
